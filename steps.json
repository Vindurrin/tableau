{
  "tableau_cleanup_config": {
    "stale_user_days": 365,
    "stale_content_days": 730,
    "stale_site_days": 365,
    "extract_check_frequency_days": 7,
    "log_only": true,
    "log_path": "../logs/"
  },

  "required_environment": {
    "os": ["Windows Server 2019+", "Ubuntu 20.04+"],
    "tableau_server": "2021.4+ (self-hosted, PAT enabled)",
    "python_version": "3.8+",
    "python_packages": [
      "tableauserverclient",
      "slack_sdk (optional for Slack alerts)"
    ]
  },

  "auth_setup": {
    "tableau": {
      "authentication_type": "Personal Access Token (PAT)",
      "required_fields": {
        "token_name": "your-pat-name",
        "token_secret": "your-pat-secret",
        "site_id": "'' (default site or use content_url)"
      }
    },
    "slack_alerts": {
      "steps": [
        "Go to https://api.slack.com/apps",
        "Create new app → Add 'Bot Token Scopes' → Select 'chat:write'",
        "Install the app into your workspace",
        "Copy the generated token (starts with 'xoxb-')",
        "Invite the bot to your alert channel (e.g., /invite @tableau-bot)"
      ],
      "note": "Free Slack plan supports this unless restricted by admins"
    },
    "email_alerts": {
      "options": [
        {
          "method": "Internal SMTP Relay",
          "requires_authentication": false,
          "setup": "Request relay access from IT"
        },
        {
          "method": "SMTP with Auth (Office365, Gmail)",
          "requires_authentication": true,
          "setup": "Use a service account email and app password or credentials"
        }
      ]
    }
  },

  "log_output_behavior": {
    "format": "JSON",
    "location": "../logs/",
    "files": [
      "inactive_users_YYYY-MM-DD.json",
      "stale_content_YYYY-MM-DD.json",
      "stale_sites_YYYY-MM-DD.json",
      "extract_tasks_YYYY-MM-DD.json"
    ]
  },

  "alerting_optional": {
    "slack": {
      "trigger": "script finds >=1 stale/inactive item",
      "action": "Send message to #tableau-alerts via bot token"
    },
    "email": {
      "trigger": "script finds >=1 stale/inactive item",
      "action": "Send email summary to admin@example.edu"
    }
  },

  "grafana_integration": {
    "option_1": {
      "backend": "Loki + Promtail",
      "setup_steps": [
        "Install Promtail on the server with the logs",
        "Configure promtail to scrape JSON files in /logs/",
        "Send to Grafana Loki instance",
        "Add Loki as a data source in Grafana",
        "Build dashboards based on structured labels (e.g., job='tableau_cleanup')"
      ],
      "impact": "Does NOT interfere with Windows Exporter dashboard"
    },
    "option_2": {
      "backend": "Filebeat + Elasticsearch",
      "alternative": true
    }
  },

  "execution_instructions": {
    "step_1": "Download and extract tableau_cleanup_scripts.zip to your server",
    "step_2": "Edit cleanup_config.json as needed",
    "step_3": "Install Python requirements: pip install -r requirements.txt (manually install TSC, etc.)",
    "step_4": "Test a single script manually (e.g., python log_stale_users.py)",
    "step_5": "Verify logs are created in /logs/",
    "step_6": "Schedule run_all_logs.sh (Linux cron) or a .bat Task Scheduler task (Windows)",
    "step_7": "Configure Slack/email alerts if desired",
    "step_8": "Optional: configure Promtail for log ingestion to Grafana"
  },

  "expected_results": {
    "logs": "New JSON files with stale/inactive users/content each time scripts run",
    "slack": "Bot message posted to specified channel when cleanup threshold met",
    "email": "Daily/weekly email with JSON summaries or links",
    "grafana": "Dashboard showing counts, trends, and anomalies in stale data"
  },

  "next_steps_after_validation": {
    "switch_to_cleanup_mode": {
      "action": "Set 'log_only': false in cleanup_config.json",
      "effect": "Scripts will begin removing stale users/content/sites automatically"
    },
    "expand_monitoring": [
      "Integrate Tableau Server logs into central SIEM (Azure Sentinel, ELK)",
      "Track extract runtimes to preempt performance issues"
    ]
  }
}
